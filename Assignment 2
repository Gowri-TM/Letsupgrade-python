{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyPwqP/YaNC/01xMaeXprqGj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Gowri-TM/Letsupgrade-python/blob/master/Assignment%202\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pahlEIanuOXC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "6ac3ad64-9ce8-4016-90a3-136be37bcdb0"
      },
      "source": [
        "#back slash\n",
        "print(\"Hello \\\n",
        "World \")"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Hello World \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uSm2SYOQABRU",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "beec0406-da96-4780-c9d2-4ccd699f44b9"
      },
      "source": [
        "print(\"I am learning python \\\n",
        "from letsupgrade\")"
      ],
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "I am learning python from letsupgrade\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2OODWaPSuigv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "71809b18-8bae-49b7-a445-8ca5bb849d2f"
      },
      "source": [
        "#tab space escape sequence\n",
        "print(\"Hello \\t Python\")"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Hello \t Python\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cXBENFsSvEfq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "fec869d4-e103-4c37-de01-94b7f67c5bd9"
      },
      "source": [
        "# new line escape sequence\n",
        "print(\"Hello \\n Python\")"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Hello \n",
            " Python\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d2ZM47J-vL0w",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "45e3a939-400f-446c-d342-c256d9e28929"
      },
      "source": [
        "#formatted output\n",
        "name=\"gowri\"\n",
        "sem=6\n",
        "branch=\"CSE\"\n",
        "print(\"Name is %s from %s branch %d sem\"%(name,branch,sem))"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Name is gowri from CSE branch 6 sem\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xT0_dlimvkiT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "9c811d73-9713-4478-8f62-880752bc6c6a"
      },
      "source": [
        "#formatted output\n",
        "std=120\n",
        "cls=5\n",
        "print(\"Total students are\",std,\"from class\",cls)"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total students are 120 from class 5\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bm2uF3ybv1xM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "3f343f3c-00b0-4f12-a7f7-8fa9926d8485"
      },
      "source": [
        "#formatted output with spacing and accuracy\n",
        "name= \"Gowri\" \n",
        "percent = 97.896\n",
        "print(\"Student %s scored!!! %2.2d percentage in 10th class\"%(name,percent))"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Student Gowri scored!!! 97 percentage in 10th class\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "y1ur70FH4wUI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "dc536cb1-fa99-47e7-f7fc-af24658d46a2"
      },
      "source": [
        "#memory locations\n",
        "a=b=10\n",
        "id(a)"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10914784"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W4YplOt-44wo",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "10299881-a69c-4bdd-ae95-d1f9c5e084f6"
      },
      "source": [
        "id(b)\n"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10914784"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oBp7dT2O49p3",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "del a\n",
        "the value stored in 'a' gets deleted"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GVZvOZ0N5Lb-",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "b0c92798-9a84-478c-8a8f-b156b5b2f707"
      },
      "source": [
        "#Arithmetic operators\n",
        "  #addition\n",
        "a=5\n",
        "b=4     \n",
        "print(a+b)\n",
        "print(a-b)\n",
        "print(a*b)\n",
        "print(a/b)\n",
        "print(a%b)\n",
        "print(a//b)\n",
        "print(a**b)"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "9\n",
            "1\n",
            "20\n",
            "1.25\n",
            "1\n",
            "1\n",
            "625\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r31rp3IR5yIZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "1a71a514-ceca-4bbf-f02f-19f7e731cfe0"
      },
      "source": [
        "#comparision operator\n",
        "a=456\n",
        "b=343\n",
        "print(a<b)\n",
        "print(a>b)\n",
        "print(a==b)\n",
        "print(a!=b)\n",
        "print(a<=b)\n",
        "print(a>=b)"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "False\n",
            "True\n",
            "False\n",
            "True\n",
            "False\n",
            "True\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZZjUlZui5Lg2",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "3589e160-d914-47bb-bffa-c0dfae896084"
      },
      "source": [
        "#logical operator\n",
        "a=10\n",
        "b=20\n",
        "c=30\n",
        "print(a<b or b<c)\n",
        "print(a>b or b>c)\n",
        "print(a<b or b>c)\n",
        "print(a<b and b<c)\n",
        "print(a>b and b<c)\n",
        "print(10<8<7)"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True\n",
            "False\n",
            "True\n",
            "True\n",
            "False\n",
            "False\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OhtnLZkC6sFP",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "06ea0885-e2c5-432d-ef09-b3f5972835ee"
      },
      "source": [
        "#bitwise operator\n",
        "a=2\n",
        "b=4\n",
        "print(a|b)\n",
        "print(a&b)\n",
        "print(a<<b)\n",
        "print(a>>b)\n"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "6\n",
            "0\n",
            "32\n",
            "0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dFC0NieA7BVD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "d29d76e6-3b89-4b29-92dd-a6702f24d886"
      },
      "source": [
        "#membership operator\n",
        "a= \"letsupgrade\"\n",
        "print(\"s\" in a)\n",
        "print(\"s\" not in a)\n",
        "print(\"h\" in a)"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True\n",
            "False\n",
            "False\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4o60kArI7TRA",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "21facfdc-0b55-4f48-834d-b4612f3e3e07"
      },
      "source": [
        "#identity operator\n",
        "a=256\n",
        "b=256\n",
        "a is b"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "buBy7C9L8Clm",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "fd7df53f-dcb3-4892-b9b7-bb13f8854feb"
      },
      "source": [
        "a=300\n",
        "b=300\n",
        "a is b"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W-wArCfp8Man",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "515b06c2-ee61-40fa-9baa-0fe5f83237d2"
      },
      "source": [
        "a=-2\n",
        "b=-2\n",
        "a is not b"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jQPQhLto8ThE",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "14616e12-9d8c-4f43-a5e6-90a1cc15650f"
      },
      "source": [
        "a=-8\n",
        "b=-8\n",
        "a is b"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iaPmGX-D-yXD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "f3a25da3-6c2a-4926-c9bb-a987407c423a"
      },
      "source": [
        "#assignment operator\n",
        "a=100\n",
        "b=2\n",
        "a+=b\n",
        "print(a)\n",
        "a=105\n",
        "a-=1\n",
        "print(a)\n",
        "a=7\n",
        "a*=2\n",
        "print(a)\n",
        "a=100\n",
        "a/=10\n",
        "print(a)\n"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "102\n",
            "104\n",
            "14\n",
            "10.0\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}